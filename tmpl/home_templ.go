// Code generated by templ@v0.2.364 DO NOT EDIT.

package templ

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Home() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div id=\"page\"><img id=\"pfp\" alt=\"cool picture of silas\" src=\"/img/pfp.jpg\"><div class=\"left\">")
		if err != nil {
			return err
		}
		var_2 := `^ me`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"home-text-box\"><h1 class=\"yellow-title first\">")
		if err != nil {
			return err
		}
		var_3 := `zero javascript`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><p class=\"home-text\">")
		if err != nil {
			return err
		}
		var_4 := `This page is the product of my frustration with JavaScript and the ecosystem around it. Rollup is being rebuilt in Rust, Bun was written in Zig, TypeScript added more ways to import modules, and NodeJS is still NodeJS. Devs are realizing JavaScript is an inefficient backend so they're developing ways to keep using it "but faster." Just make Protobufs good and call it a day, thanks.`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p><h1 class=\"yellow-title\">")
		if err != nil {
			return err
		}
		var_5 := `gopher language`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><p class=\"home-text\">")
		if err != nil {
			return err
		}
		var_6 := `Fast build times, good standard library, easy to read; Go is a solid choice for simple html servers (and more. But more on more later).`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p><h1 class=\"yellow-title\">")
		if err != nil {
			return err
		}
		var_7 := `htmx`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><p class=\"home-text\">")
		if err != nil {
			return err
		}
		var_8 := `The internet should be built like this. No, really. Hypermedia should have stayed and needs to come back.`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></div></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
